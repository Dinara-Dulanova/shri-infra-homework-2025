name: fix release flow

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Версия релиза для фикса"
        required: true

jobs:
  fix:
    name: Fix build and publish
    runs-on: ubuntu-latest
    env:
      REGISTRY: cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}
      IMAGE_NAME: app
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}
      FIX_NUMBER: ${{ github.run_number }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Login to Yandex Cloud Container Registry
        run: echo ${{ secrets.Y_CR_TOKEN }} | docker login --username oauth --password-stdin cr.yandex

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${RELEASE_VERSION}_fix${FIX_NUMBER} .
          docker tag $REGISTRY/$IMAGE_NAME:${RELEASE_VERSION}_fix${FIX_NUMBER} $REGISTRY/$IMAGE_NAME:${RELEASE_VERSION}_latest

      - name: Push Docker images
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${RELEASE_VERSION}_fix${FIX_NUMBER}
          docker push $REGISTRY/$IMAGE_NAME:${RELEASE_VERSION}_latest

      - name: Create fix tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${RELEASE_VERSION}_fix${FIX_NUMBER}
          git push origin ${RELEASE_VERSION}_fix${FIX_NUMBER}

      - name: Get previous tag and commits
        id: commits
        run: |
          git fetch --tags
          PREV_TAG=$(git tag --sort=-creatordate | grep -E "^v[0-9]+(_fix[0-9]+)?$" | sed -n 2p)
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_OUTPUT
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" HEAD)
          else
            COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)")
          fi
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT

      - name: Find release issue number
        id: find_issue
        run: |
          ISSUE_NUMBER=$(gh issue list --state open --search "Release $RELEASE_VERSION in:title" --json number -q '.[0].number')
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug issue number
        run: echo "ISSUE_NUMBER=${{ steps.find_issue.outputs.ISSUE_NUMBER }}"

      - name: Add comment to release issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment ${{ steps.find_issue.outputs.ISSUE_NUMBER }} \
            --body "Fix ${{ env.RELEASE_VERSION }} (fix${{ env.FIX_NUMBER }})
            Автор: ${{ github.actor }}
            Список коммитов:
            ${{ steps.commits.outputs.commits }}

            Docker-образ: cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app:${{ env.RELEASE_VERSION }}_fix${{ env.FIX_NUMBER }}"

      # - name: Generate Issue body
      #   run: |
      #     echo "# Фикс релиза $RELEASE_VERSION (fix${FIX_NUMBER})" > issue_body.txt
      #     echo "" >> issue_body.txt
      #     echo "**Дата фикса:** $(date +'%Y-%m-%d')" >> issue_body.txt
      #     echo "**Автор фикса:** ${{ github.actor }}" >> issue_body.txt
      #     echo "**Версия релиза:** $RELEASE_VERSION" >> issue_body.txt
      #     echo "**Номер фикса:** $FIX_NUMBER" >> issue_body.txt
      #     echo "" >> issue_body.txt
      #     echo "**Список изменений (коммиты с предыдущего релиза):**" >> issue_body.txt
      #     git log --oneline $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD >> issue_body.txt
      #     echo "" >> issue_body.txt
      #     echo "**Ссылка на Docker-образ:**" >> issue_body.txt
      #     echo "$REGISTRY/$IMAGE_NAME:${RELEASE_VERSION}_fix${FIX_NUMBER}" >> issue_body.txt

      # - name: Create GitHub Issue
      #   uses: peter-evans/create-issue-from-file@v4
      #   with:
      #     title: "Fix ${{ env.RELEASE_VERSION }} (fix${{ env.FIX_NUMBER }})"
      #     content-filepath: ./issue_body.txt
